@use "../base/mixins" as *;

$colors: primary, neutral, success, info, warning, danger;
$variants: solid, subtle, outline, ghost;

/* -------------------------------------------------------------------------------------------------
 * Theme variables
 * -----------------------------------------------------------------------------------------------*/

// primary - solid
@include color-mode-vars(
  (
    // base
    color-mode-value(--hope-button-primary-solid-bg-color, rgb-var(--hope-colors-primary-600)),
    color-mode-value(--hope-button-primary-solid-border-color, 1px solid rgb-var(--hope-colors-primary-600)),
    color-mode-value(--hope-button-primary-solid-color, white),
    // hover
    color-mode-value(--hope-button-primary-solid-hover-bg-color, rgb-var(--hope-colors-primary-700)),
    color-mode-value(--hope-button-primary-solid-hover-border-color, 1px solid rgb-var(--hope-colors-primary-700)),
    color-mode-value(--hope-button-primary-solid-hover-color, white),
    // active
    color-mode-value(--hope-button-primary-solid-active-bg-color, rgb-var(--hope-colors-primary-800)),
    color-mode-value(--hope-button-primary-solid-active-border-color, 1px solid rgb-var(--hope-colors-primary-800)),
    color-mode-value(--hope-button-primary-solid-active-color, white),
    // disabled
    color-mode-value(--hope-button-primary-solid-disabled-bg-color, rgb-var(--hope-colors-neutral-100)),
    color-mode-value(--hope-button-primary-solid-disabled-border-color, 1px solid rgb-var(--hope-colors-neutral-100)),
    color-mode-value(--hope-button-primary-solid-disabled-color, rgb-var(--hope-colors-neutral-200))
  )
);

/* -------------------------------------------------------------------------------------------------
 * Button
 * -----------------------------------------------------------------------------------------------*/
.hope-button {
  appearance: none;
  position: relative;

  display: inline-flex;
  justify-content: center;
  align-items: center;

  width: auto;

  outline: none;
  border: 1px solid transparent;

  padding: 0;

  font-family: inherit;
  font-size: 100%;
  font-weight: 500;
  line-height: 1;
  text-decoration: none;

  cursor: pointer;
  user-select: none;
  white-space: nowrap;
  vertical-align: middle;
  transition-property: color, border-color, background-color, box-shadow;
  transition-duration: 250ms;

  @include focus-ring;

  &:disabled {
    cursor: not-allowed;
    pointer-events: none;
  }
}

.hope-button--is-full-width {
  display: flex;
  width: 100%;
}

.hope-button--is-loading {
  opacity: 0.8;
  cursor: default;
  pointer-events: none;
}

/* -------------------------------------------------------------------------------------------------
 * Button - size
 * -----------------------------------------------------------------------------------------------*/
.hope-button--xs {
  height: 24px;
  border-radius: 3px;
  padding: 0 8px;
  font-size: 12px;
  gap: 4px;
}

.hope-button--sm {
  height: 32px;
  border-radius: 3px;
  padding: 0 12px;
  font-size: 14px;
  gap: 6px;
}

.hope-button--md {
  height: 40px;
  border-radius: 4px;
  padding: 0 16px;
  font-size: 16px;
  gap: 8px;
}

.hope-button--lg {
  height: 48px;
  border-radius: 5px;
  padding: 0 24px;
  font-size: 18px;
  gap: 10px;
}

/* -------------------------------------------------------------------------------------------------
 * Button - variant
 * -----------------------------------------------------------------------------------------------*/
@each $color in $colors {
  @each $variant in $variants {
    .hope-button--#{$color}.hope-button--#{$variant} {
      border: var(--hope-button-#{$color}-#{$variant}-border-color);
      background-color: var(--hope-button-#{$color}-#{$variant}-bg-color);
      color: var(--hope-button-#{$color}-#{$variant}-color);

      &:hover {
        border: var(--hope-button-#{$color}-#{$variant}-hover-border-color);
        background-color: var(--hope-button-#{$color}-#{$variant}-hover-bg-color);
        color: var(--hope-button-#{$color}-#{$variant}-hover-color);
      }

      &:active {
        border: var(--hope-button-#{$color}-#{$variant}-active-border-color);
        background-color: var(--hope-button-#{$color}-#{$variant}-active-bg-color);
        color: var(--hope-button-#{$color}-#{$variant}-active-color);
      }

      &:disabled {
        border: var(--hope-button-#{$color}-#{$variant}-disabled-border-color);
        background-color: var(--hope-button-#{$color}-#{$variant}-disabled-bg-color);
        color: var(--hope-button-#{$color}-#{$variant}-disabled-color);
      }
    }
  }
}

/* -------------------------------------------------------------------------------------------------
 * ButtonIcon
 * -----------------------------------------------------------------------------------------------*/
.hope-button__icon {
  display: inline-flex;
  align-self: center;
  flex-shrink: 0;
}

/* -------------------------------------------------------------------------------------------------
 * ButtonLoader
 * -----------------------------------------------------------------------------------------------*/
.hope-button__loader {
  position: absolute;
  display: flex;
  align-items: center;
  flex-shrink: 0;
  font-size: 1em;
  line-height: normal;
}

.hope-button__loader--with-loading-text {
  position: relative;
}

/* -------------------------------------------------------------------------------------------------
 * Button - default icon spinner
 * -----------------------------------------------------------------------------------------------*/
.hope-button__icon-spinner {
  font-size: 1.3em;
  animation: 1s linear infinite hope-spin;
}

/* -------------------------------------------------------------------------------------------------
 * ButtonGroup
 * -----------------------------------------------------------------------------------------------*/
.hope-button__group {
  display: inline-flex;

  & .hope-button:focus {
    z-index: 1;
  }

  & > *:first-of-type:not(:last-of-type) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  & > *:not(:first-of-type):not(:last-of-type) {
    border-radius: 0;
  }

  & > *:not(:first-of-type):last-of-type {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
}
